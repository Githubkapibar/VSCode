* {
  padding: 0;
  margin: 0;
  font-family: 'Roboto Condensed', sans-serif;
}

body,
html {
  overflow-x: hidden;
}

.wrapper {
  display: grid;
  grid-template-areas: "header header header" "main main sidebar" "footer footer footer";
  border: 2px solid red;
}

.wrapper .site-header {
  font-size: 25px;
  grid-area: header;
}

.wrapper main {
  grid-area: main;
}

.wrapper .section-item1 {
  border: 2px solid green;
  font-size: 25px;
}

.wrapper .section-item2 {
  border: 2px solid green;
  font-size: 25px;
}

.wrapper .section-item3 {
  border: 2px solid green;
  font-size: 25px;
}

.wrapper .site-aside {
  grid-area: sidebar;
  border: 2px solid green;
  font-size: 25px;
}

.wrapper .site-footer {
  grid-area: footer;
  border: 2px solid green;
  font-size: 25px;
}

.header-top {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1100px;
  width: 100%;
  display: -webkit-box;
  display: flex;
}

#checkbox-menu,
.toggle {
  display: none;
}

label {
  width: 100%;
}

.menu {
  padding: 0;
  margin: 0;
  height: 50px;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  flex-direction: row;
  justify-content: space-around;
  -webkit-box-align: center;
  align-items: center;
  list-style-type: none;
}

.menu li a {
  display: block;
  color: #000000;
  text-decoration: none;
  align-self: center;
  font-size: 13px;
  padding: 10px 15px;
  -webkit-transition: background .2s linear;
  transition: background .2s linear;
}

.menu li a:hover {
  background: #ffcc01;
  border-radius: 3px;
}

.wrapper {
  margin: 0 auto;
  max-width: 1100px;
  width: 100%;
}

@media screen and (max-width: 765px) {
  .toggle {
    clear: both;
    display: block;
    text-align: center;
    font-size: 18px;
    line-height: 40px;
    width: 100%;
    color: #000;
    background: #ffcc01;
    -webkit-transition: all .1s linear;
    transition: all .1s linear;
  }
  .toggle:hover {
    background: #d3a900;
  }
  #checkbox-menu:checked + label .touch li {
    opacity: 1;
    visibility: visible;
    -webkit-transition: all .7s linear;
    transition: all .7s linear;
  }
  #checkbox-menu:checked + label .touch {
    height: 350px;
  }
  .menu {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: column;
    justify-content: space-around;
    -webkit-box-align: center;
    align-items: center;
    height: 0;
    -webkit-transition: height .3s linear;
    transition: height .3s linear;
  }
  .menu li {
    display: -webkit-box;
    display: flex;
    align-self: center;
    width: 95%;
    opacity: 0;
    visibility: hidden;
  }
  .menu li a {
    width: 95%;
    text-align: center;
    align-self: center;
    align-content: center;
  }
  .menu li a.logo {
    font-size: 21px;
    margin-right: 0;
  }
  .menu li a.contacts {
    margin-right: 0;
  }
  .intro {
    margin-top: 0;
    display: block;
    min-width: 100%;
  }
  .intro .intro-img {
    background-position: bottom 50px right 570px;
  }
  .intro .intro-text {
    position: relative;
    font-size: 35px;
    right: -10px;
    top: 95px;
  }
  .intro .intro-contacts {
    right: 0;
    top: -60px;
    padding: 20px 10px;
    position: relative;
  }
  .intro .intro-contacts i {
    margin-right: 10px;
  }
  .intro .intro-contacts p {
    font-style: 13px;
    margin-right: 0;
  }
}

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> 45fdeb1e0d9f6fa2e38b164d6cae03fcc0bbb8a7
